from math import *
import numpy as np

def computeR_head(alpha):

	alpha1 = alpha[0]
	alpha2 = alpha[1]
	alpha3 = alpha[2]

	R_head=np.reshape(([np.multiply(np.multiply(cos(np.multiply(alpha1,(1.0 / 2.0))),sqrt(np.dot(cos(np.multiply(alpha1,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0)),(- 1.0 / 2.0)) - np.multiply(cos(alpha1 + alpha2 + np.multiply(alpha3,(1.0 / 2.0))),sqrt(np.dot(cos(np.multiply(alpha3,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0)) - np.multiply(cos(alpha1 + np.multiply(alpha2,(1.0 / 2.0))),sqrt(np.dot(cos(np.multiply(alpha2,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0)) - np.multiply(np.dot(np.multiply(cos(np.multiply(alpha1,(1.0 / 2.0))),sin(np.multiply(alpha1,(1.0 / 2.0))) ** 2.0),1.0) / sqrt(np.dot(cos(np.multiply(alpha1,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0),(1.0 / 200.0)),np.multiply(np.multiply(sin(np.multiply(alpha1,(1.0 / 2.0))),sqrt(np.dot(cos(np.multiply(alpha1,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0)),(- 1.0 / 2.0)) - np.multiply(sin(alpha1 + alpha2 + np.multiply(alpha3,(1.0 / 2.0))),sqrt(np.dot(cos(np.multiply(alpha3,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0)) - np.multiply(sin(alpha1 + np.multiply(alpha2,(1.0 / 2.0))),sqrt(np.dot(cos(np.multiply(alpha2,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0)) + np.multiply(np.multiply(np.dot(cos(np.multiply(alpha1,(1.0 / 2.0))) ** 2.0,sin(np.multiply(alpha1,(1.0 / 2.0)))),1.0) / sqrt(np.dot(cos(np.multiply(alpha1,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0),(1.0 / 200.0)),1.0,np.multiply(- cos(alpha1 + alpha2 + np.multiply(alpha3,(1.0 / 2.0))),sqrt(np.dot(cos(np.multiply(alpha3,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0)) - np.multiply(np.multiply(cos(alpha1 + np.multiply(alpha2,(1.0 / 2.0))),sqrt(np.dot(cos(np.multiply(alpha2,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0)),(1.0 / 2.0)) - np.multiply(np.multiply(np.multiply(np.multiply(cos(np.multiply(alpha2,(1.0 / 2.0))),sin(np.multiply(alpha2,(1.0 / 2.0)))),sin(alpha1 + np.multiply(alpha2,(1.0 / 2.0)))),1.0) / sqrt(np.dot(cos(np.multiply(alpha2,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0),(1.0 / 200.0)),np.multiply(- sin(alpha1 + alpha2 + np.multiply(alpha3,(1.0 / 2.0))),sqrt(np.dot(cos(np.multiply(alpha3,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0)) - np.multiply(np.multiply(sin(alpha1 + np.multiply(alpha2,(1.0 / 2.0))),sqrt(np.dot(cos(np.multiply(alpha2,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0)),(1.0 / 2.0)) + np.multiply(np.multiply(np.multiply(np.multiply(cos(np.multiply(alpha2,(1.0 / 2.0))),sin(np.multiply(alpha2,(1.0 / 2.0)))),cos(alpha1 + np.multiply(alpha2,(1.0 / 2.0)))),1.0) / sqrt(np.dot(cos(np.multiply(alpha2,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0),(1.0 / 200.0)),1.0,np.multiply(np.multiply(cos(alpha1 + alpha2 + np.multiply(alpha3,(1.0 / 2.0))),sqrt(np.dot(cos(np.multiply(alpha3,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0)),(- 1.0 / 2.0)) - np.multiply(np.multiply(np.multiply(np.multiply(cos(np.multiply(alpha3,(1.0 / 2.0))),sin(np.multiply(alpha3,(1.0 / 2.0)))),sin(alpha1 + alpha2 + np.multiply(alpha3,(1.0 / 2.0)))),1.0) / sqrt(np.dot(cos(np.multiply(alpha3,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0),(1.0 / 200.0)),np.multiply(np.multiply(sin(alpha1 + alpha2 + np.multiply(alpha3,(1.0 / 2.0))),sqrt(np.dot(cos(np.multiply(alpha3,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0)),(- 1.0 / 2.0)) + np.multiply(np.multiply(np.multiply(np.multiply(cos(np.multiply(alpha3,(1.0 / 2.0))),sin(np.multiply(alpha3,(1.0 / 2.0)))),cos(alpha1 + alpha2 + np.multiply(alpha3,(1.0 / 2.0)))),1.0) / sqrt(np.dot(cos(np.multiply(alpha3,(1.0 / 2.0))) ** 2.0,(- 1.0 / 100.0)) + 1.0 / 25.0),(1.0 / 200.0)),1.0]),(3,3),order='F')

	return R_head
